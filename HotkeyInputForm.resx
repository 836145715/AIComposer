<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="windowBar.IconSvg" xml:space="preserve">
    <value>&lt;svg t="1730773064864" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2189" width="200" height="200"&gt;&lt;path d="M810.3424 334.848c16.384 29.184 45.824 46.592 78.592 46.592 27.392 0 49.8176 22.9376 49.8176 51.3024v158.6688c0 28.16-22.4256 51.2-49.8176 51.2-32.8704 0-62.208 17.4592-78.592 46.6944a94.72 94.72 0 0 0 0 93.2864 52.0704 52.0704 0 0 1-18.2784 69.9904L658.688 931.84a49.152 49.152 0 0 1-67.9936-18.6368 89.344 89.344 0 0 0-78.592-46.7456c-32.768 0-62.208 17.408-78.592 46.6432a49.5104 49.5104 0 0 1-43.264 25.6 48.5888 48.5888 0 0 1-24.7296-6.8608L231.936 852.5824a50.6368 50.6368 0 0 1-23.2448-31.0784 51.7632 51.7632 0 0 1 4.9664-38.912 94.72 94.72 0 0 0 0-93.2864 89.4464 89.4464 0 0 0-78.592-46.6432c-27.392 0-49.8176-23.04-49.8176-51.2512v-158.72c0-28.16 22.4256-51.2 49.8176-51.2 32.768 0 62.208-17.4592 78.592-46.6944a94.72 94.72 0 0 0 0-93.2864 51.968 51.968 0 0 1 18.2272-69.9392l133.5296-79.3088a48.9984 48.9984 0 0 1 67.9936 18.7392 89.4464 89.4464 0 0 0 157.184 0 49.0496 49.0496 0 0 1 68.096-18.8416l133.376 79.36c23.808 14.1312 32 45.5168 18.2784 69.9904a94.72 94.72 0 0 0 0 93.2864zM512 750.8992A239.2576 239.2576 0 0 0 750.9504 512 239.4112 239.4112 0 0 0 512 273.0496 239.36 239.36 0 0 0 273.0496 512 239.36 239.36 0 0 0 512 750.9504z" fill="#d81e06" p-id="2190"&gt;&lt;/path&gt;&lt;path d="M512 642.4064A130.6112 130.6112 0 0 1 381.5936 512 130.6112 130.6112 0 0 1 512 381.5936 130.6112 130.6112 0 0 1 642.4064 512 130.56 130.56 0 0 1 512 642.4064" fill="#d81e06" p-id="2191"&gt;&lt;/path&gt;&lt;/svg&gt;</value>
  </data>
  <data name="inputHotkey.PrefixSvg" xml:space="preserve">
    <value>&lt;svg t="1730771993009" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="8587" width="200" height="200"&gt;&lt;path d="M928 1024H96a96 96 0 0 1-96-96V544a96 96 0 0 1 96-96h832a96 96 0 0 1 96 96v384a96 96 0 0 1-96 96zM96 512a32 32 0 0 0-32 32v384a32 32 0 0 0 32 32h832a32 32 0 0 0 32-32V544a32 32 0 0 0-32-32z" fill="#515151" p-id="8588"&gt;&lt;/path&gt;&lt;path d="M384 832h256v64h-256zM704 832h64v64h-64zM832 832h64v64h-64zM256 832h64v64H256zM128 832h64v64H128zM384 576h256v64h-256zM704 576h64v64h-64zM832 576h64v64h-64zM256 576h64v64H256zM128 576h64v64H128zM800 704h96v64h-96zM672 704h64v64h-64zM544 704h64v64h-64zM416 704h64v64h-64zM288 704h64v64H288zM128 704h96v64H128zM480 288h64v192h-64zM672 0h64v160h-64zM544 288h-64a96 96 0 0 1 96-96v64a32 32 0 0 0-32 32zM640 256V192a32 32 0 0 0 32-32h64a96 96 0 0 1-96 96zM576 192h64v64h-64z" fill="#515151" p-id="8589"&gt;&lt;/path&gt;&lt;/svg&gt;</value>
  </data>
  <data name="buttonOk.IconSvg" xml:space="preserve">
    <value>&lt;svg viewBox="64 64 896 896"&gt;&lt;path d="M716.3 313.8c19-18.9 19-49.7 0-68.6l-69.9-69.9.1.1c-18.5-18.5-50.3-50.3-95.3-95.2-21.2-20.7-55.5-20.5-76.5.5L80.9 474.2a53.84 53.84 0 000 76.4L474.6 944a54.14 54.14 0 0076.5 0l165.1-165c19-18.9 19-49.7 0-68.6a48.7 48.7 0 00-68.7 0l-125 125.2c-5.2 5.2-13.3 5.2-18.5 0L189.5 521.4c-5.2-5.2-5.2-13.3 0-18.5l314.4-314.2c.4-.4.9-.7 1.3-1.1 5.2-4.1 12.4-3.7 17.2 1.1l125.2 125.1c19 19 49.8 19 68.7 0zM408.6 514.4a106.3 106.2 0 10212.6 0 106.3 106.2 0 10-212.6 0zm536.2-38.6L821.9 353.5c-19-18.9-49.8-18.9-68.7.1a48.4 48.4 0 000 68.6l83 82.9c5.2 5.2 5.2 13.3 0 18.5l-81.8 81.7a48.4 48.4 0 000 68.6 48.7 48.7 0 0068.7 0l121.8-121.7a53.93 53.93 0 00-.1-76.4z"&gt;&lt;/path&gt;&lt;/svg&gt;</value>
  </data>
  <data name="buttonCancel.IconSvg" xml:space="preserve">
    <value>&lt;svg viewBox="64 64 896 896"&gt;&lt;path d="M716.3 313.8c19-18.9 19-49.7 0-68.6l-69.9-69.9.1.1c-18.5-18.5-50.3-50.3-95.3-95.2-21.2-20.7-55.5-20.5-76.5.5L80.9 474.2a53.84 53.84 0 000 76.4L474.6 944a54.14 54.14 0 0076.5 0l165.1-165c19-18.9 19-49.7 0-68.6a48.7 48.7 0 00-68.7 0l-125 125.2c-5.2 5.2-13.3 5.2-18.5 0L189.5 521.4c-5.2-5.2-5.2-13.3 0-18.5l314.4-314.2c.4-.4.9-.7 1.3-1.1 5.2-4.1 12.4-3.7 17.2 1.1l125.2 125.1c19 19 49.8 19 68.7 0zM408.6 514.4a106.3 106.2 0 10212.6 0 106.3 106.2 0 10-212.6 0zm536.2-38.6L821.9 353.5c-19-18.9-49.8-18.9-68.7.1a48.4 48.4 0 000 68.6l83 82.9c5.2 5.2 5.2 13.3 0 18.5l-81.8 81.7a48.4 48.4 0 000 68.6 48.7 48.7 0 0068.7 0l121.8-121.7a53.93 53.93 0 00-.1-76.4z"&gt;&lt;/path&gt;&lt;/svg&gt;</value>
  </data>
</root>